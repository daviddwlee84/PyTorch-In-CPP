{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "2_VanillaMKL/example/1_PureJson",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/2_VanillaMKL/example/1_PureJson/create_json", // Adjust the path
            "args": [], // Add any command line arguments here
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/2_VanillaMKL/example/1_PureJson",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build Pure Json Example", // Define a task to build the project
            "miDebuggerPath": "/usr/bin/gdb", // Adjust to your gdb path
            "logging": {
                "trace": true,
                "traceResponse": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            }
        },
        {
            "name": "1_TorchScript/example/1_LibTorch_Basic_Tensor - load_tensor",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/1_TorchScript/example/1_LibTorch_Basic_Tensor/build/load-tensor", // Adjust the path
            "args": [], // Add any command line arguments here
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/1_TorchScript/example/1_LibTorch_Basic_Tensor",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build Torch Tensor Example (Debug)", // Define a task to build the project
            "miDebuggerPath": "/usr/bin/gdb", // Adjust to your gdb path
            "logging": {
                "trace": true,
                "traceResponse": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            }
        },
        {
            "name": "1_TorchScript/example/1_LibTorch_Basic_Tensor - example-app",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/1_TorchScript/example/1_LibTorch_Basic_Tensor/build/example-app", // Adjust the path
            "args": [], // Add any command line arguments here
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/1_TorchScript/example/1_LibTorch_Basic_Tensor",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build Torch Tensor Example (Debug)", // Define a task to build the project
            "miDebuggerPath": "/usr/bin/gdb", // Adjust to your gdb path
            "logging": {
                "trace": true,
                "traceResponse": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            }
        },
        {
            "name": "2_VanillaMKL/example/5_Load_StateDict_For_Model",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/2_VanillaMKL/example/5_Load_StateDict_For_Model/build/load_and_run", // Adjust the path
            "args": [
                "${workspaceFolder}/2_VanillaMKL/example/5_Load_StateDict_For_Model/state_dict.json"
            ], // Add any command line arguments here
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/2_VanillaMKL/example/5_Load_StateDict_For_Model",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build MKL Load StateDict Into Model Example (Debug)", // Define a task to build the project
            "miDebuggerPath": "${workspaceFolder}/2_VanillaMKL/example/5_Load_StateDict_For_Model/gdb_wrapper.sh", // Adjust to your gdb path
            "logging": {
                "trace": true,
                "traceResponse": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            }
        }
    ]
}